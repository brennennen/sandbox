#MACHINE ?= "qemuarm64"
MACHINE = "qemuarm64"

# Store intermediate files out of tree in a well known location that has a lot of disk space.
DL_DIR ?= "/mnt/d_wsl/yocto/downloads"
SSTATE_DIR ?= "/mnt/d_wsl/yocto/sstate"
TMPDIR ?= "/mnt/d_wsl/yocto/tmp"

# DISTRO ?= "poky"
# PACKAGE_CLASSES ?= "package_rpm"

# "debug-tweaks" sets up root access with a blank password
# EXTRA_IMAGE_FEATURES ?= "debug-tweaks"

# Collect build statistics
USER_CLASSES ?= "buildstats"

# Disk Space Monitoring
BB_DISKMON_DIRS ??= "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    HALT,${TMPDIR},100M,1K \
    HALT,${DL_DIR},100M,1K \
    HALT,${SSTATE_DIR},100M,1K \
    HALT,/tmp,10M,1K"

# TODO: explore runtime testing of images
#IMAGE_CLASSES += "testimage testsdk"
#TESTIMAGE_AUTO:qemuall = "1"

# Disable interactive patch resolution.
PATCHRESOLVE = "noop"

# TODO: explore shared-state files from other locations
#SSTATE_MIRRORS ?= "\
#file://.* https://someserver.tld/share/sstate/PATH;downloadfilename=PATH \
#file://.* file:///some/local/dir/sstate/PATH"

# TODO: explore Yocto Project SState Mirror and hash equivalence
#BB_HASHSERVE_UPSTREAM = 'wss://hashserv.yoctoproject.org/ws'
#SSTATE_MIRRORS ?= "file://.* http://cdn.jsdelivr.net/yocto/sstate/all/PATH;downloadfilename=PATH"
#BB_HASHSERVE = "auto"
#BB_SIGNATURE_HANDLER = "OEEquivHash"

# Memory Resident Bitbake
BB_SERVER_TIMEOUT = "60"

# Qemu configuration
PACKAGECONFIG:append:pn-qemu-system-native = " sdl"

CONF_VERSION = "2"
